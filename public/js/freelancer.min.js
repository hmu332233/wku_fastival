 /*!
  * Start Bootstrap - Freelancer v3.3.7+1 (http://startbootstrap.com/template-overviews/freelancer)
  * Copyright 2013-2016 Start Bootstrap
  * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap/blob/gh-pages/LICENSE)
  */
 !function(o){"use strict";o(".page-scroll a").bind("click",function(t){var l=o(this);o("html, body").stop().animate({scrollTop:o(l.attr("href")).offset().top-50},1250,"easeInOutExpo"),t.preventDefault()}),o("body").scrollspy({target:".navbar-fixed-top",offset:51}),o(".navbar-collapse ul li a").click(function(){o(".navbar-toggle:visible").click()}),o("#mainNav").affix({offset:{top:100}}),o(function(){o("body").on("input propertychange",".floating-label-form-group",function(t){o(this).toggleClass("floating-label-form-group-with-value",!!o(t.target).val())}).on("focus",".floating-label-form-group",function(){o(this).addClass("floating-label-form-group-with-focus")}).on("blur",".floating-label-form-group",function(){o(this).removeClass("floating-label-form-group-with-focus")})})}(jQuery);


 $('.btn1').on('click', function(){
      var target = $(this).attr('rel');
      $('.btn1').css("background-color","#EFE7E6");
      $('.btn1').css("border-color","#EFE7E6");
      $('.btn1').css("color","#662408");
      $(this).css("background-color","#662408");
      $(this).css("border-color","#662408");
      $(this).css("color","#EFE7E6");
      $("#"+target).show().siblings(".iljung-iljung-div").hide();
     
   });


 $('.btn2').on('click', function(){
      var target = $(this).attr('rel');
      $('.btn2').css("background-color","#fff");
      $('.btn2').css("border-color","#fff");
      $('.btn2').css("color","#cf6044");
      $(this).css("background-color","#cf6044");
      $(this).css("border-color","#cf6044");
      $(this).css("color","#fff");
      $("#"+target).show().siblings(".lineup-lineup-div").hide();
     
   });

 $('.btn3').on('click', function(){
      var target = $(this).attr('rel');
      
      $("#"+target).show().siblings(".nanjang3-div").hide();
     
   });


 //지도
 var container = document.getElementById('map');
 var options = {
 	center: new daum.maps.LatLng(35.969010, 126.957413),
 	level: 1
 };

 var map = new daum.maps.Map(container, options);

 var MARKER_WIDTH = 33, // 기본, 클릭 마커의 너비
     MARKER_HEIGHT = 36, // 기본, 클릭 마커의 높이
     OFFSET_X = 12, // 기본, 클릭 마커의 기준 X좌표
     OFFSET_Y = MARKER_HEIGHT, // 기본, 클릭 마커의 기준 Y좌표
     OVER_MARKER_WIDTH = 40, // 오버 마커의 너비
     OVER_MARKER_HEIGHT = 42, // 오버 마커의 높이
     OVER_OFFSET_X = 13, // 오버 마커의 기준 X좌표
     OVER_OFFSET_Y = OVER_MARKER_HEIGHT, // 오버 마커의 기준 Y좌표
     SPRITE_MARKER_URL = '/img/markers.png', // 스프라이트 마커 이미지 URL
     SPRITE_WIDTH = 126, // 스프라이트 이미지 너비
     SPRITE_HEIGHT = 146, // 스프라이트 이미지 높이
     SPRITE_GAP = 10; // 스프라이트 이미지에서 마커간 간격
    
     var markerSize = new daum.maps.Size(MARKER_WIDTH, MARKER_HEIGHT), // 기본, 클릭 마커의 크기
     markerOffset = new daum.maps.Point(OFFSET_X, OFFSET_Y), // 기본, 클릭 마커의 기준좌표
     overMarkerSize = new daum.maps.Size(OVER_MARKER_WIDTH, OVER_MARKER_HEIGHT), // 오버 마커의 크기
     overMarkerOffset = new daum.maps.Point(OVER_OFFSET_X, OVER_OFFSET_Y), // 오버 마커의 기준 좌표
     spriteImageSize = new daum.maps.Size(SPRITE_WIDTH, SPRITE_HEIGHT); // 스프라이트 이미지의 크기

 var positions = [  // 마커의 위치
      {
         title: '컴퓨터공학과', 
         latlng: new daum.maps.LatLng(35.968993, 126.956999),
         sw: new daum.maps.LatLng(35.968931, 126.956931), // 사각형 영역의 남서쪽 좌표
         ne: new daum.maps.LatLng(35.969103, 126.957060),
         color:"#f09590"
      },
      {
         title: '메롱', 
         latlng: new daum.maps.LatLng(35.969189, 126.956992),
         sw: new daum.maps.LatLng(35.969152, 126.956924), // 사각형 영역의 남서쪽 좌표
         ne: new daum.maps.LatLng(35.969306, 126.957060),
         color:"#95A5C3"
      },
      {
         title: '안냥', 
         color:"#7F9FA4"
      },
      {
          title:'aa',
          color:"#deb29e"
      },
      {
          title:'bb',
          color:"#bd9dc7"
      },
      {
          title:'cc',
          color:"#e68b60"
      },
      {
          title:'dd',
          color:"#de625b"
      },
      {
          title:'ee',
          color:"#887b8f"
      },
      {
          title:'ff',
          color:"#b5bf8e"
      },
      {
          title:'gg',
          color:"#8db5b0"
      },
      {
          title:'hh',
          color:"#c9a9ab"
      },
      {
          title:'bb',
          color:"#e6ca70"
      },
      {
          title:'bb',
          color:"#b3a074"
      },
      {
          title:'bb',
          color:"#eb8d8d"
      },
      {
          title:'bb',
          color:"#afa9c4"
      },
      {
          title:'bb',
          color:"#918A86"
      },
      {
          title:'bb',
          color:"#c2b19f"
      },
      {
          title:'bb',
          color:"#87a894"
      },
      {
          title:'bb',
          color:"#ed9e66"
      },
      {
          title:'bb',
          color:"#9cab60"
      }
         /*new daum.maps.LatLng(35.968768, 126.957099),
         new daum.maps.LatLng(35.968712, 126.957504),
         new daum.maps.LatLng(33.4506468, 126.5707)*/
     ],
     selectedMarker = null; // 클릭한 마커를 담을 변수

 // 지도 위에 마커를 표시합니다
 for (var i = 0, len = positions.length; i < len; i++) {
     var gapX = (MARKER_WIDTH + SPRITE_GAP), // 스프라이트 이미지에서 마커로 사용할 이미지 X좌표 간격 값
         originY = (MARKER_HEIGHT + SPRITE_GAP) * i, // 스프라이트 이미지에서 기본, 클릭 마커로 사용할 Y좌표 값
         overOriginY = (OVER_MARKER_HEIGHT + SPRITE_GAP) * i, // 스프라이트 이미지에서 오버 마커로 사용할 Y좌표 값
         normalOrigin = new daum.maps.Point(0, originY), // 스프라이트 이미지에서 기본 마커로 사용할 영역의 좌상단 좌표
         clickOrigin = new daum.maps.Point(gapX, originY), // 스프라이트 이미지에서 마우스오버 마커로 사용할 영역의 좌상단 좌표
         overOrigin = new daum.maps.Point(gapX * 2, overOriginY); // 스프라이트 이미지에서 클릭 마커로 사용할 영역의 좌상단 좌표
  
         
     // 마커를 생성하고 지도위에 표시합니다
     addMarker(positions[i].latlng, normalOrigin, overOrigin, clickOrigin,positions[i].title,i);

     var rectangle = new daum.maps.Rectangle({
     bounds: new daum.maps.LatLngBounds(positions[i].sw, positions[i].ne), // 그려질 사각형의 영역정보입니다
     strokeWeight: 4, // 선의 두께입니다
     strokeColor: positions[i].color, // 선의 색깔입니다
     strokeOpacity: 1, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다
     strokeStyle: 'solid', // 선의 스타일입니다
     fillColor: positions[i].color, // 채우기 색깔입니다
     fillOpacity: 0.8 // 채우기 불투명도 입니다
 });
 // 지도에 사각형을 표시합니다
    rectangle.setMap(map);
 }

 // 마커를 생성하고 지도 위에 표시하고, 마커에 mouseover, mouseout, click 이벤트를 등록하는 함수입니다
 function addMarker(position, normalOrigin, overOrigin, clickOrigin,content,id) {
     // 기본 마커이미지, 오버 마커이미지, 클릭 마커이미지를 생성합니다
     var normalImage = createMarkerImage(markerSize, markerOffset, normalOrigin),
         overImage = createMarkerImage(overMarkerSize, overMarkerOffset, overOrigin),
         clickImage = createMarkerImage(markerSize, markerOffset, clickOrigin);
    
     // 마커를 생성하고 이미지는 기본 마커 이미지를 사용합니다
     var marker = new daum.maps.Marker({
         id:id,
         map: map,
         position: position,
         image: normalImage
     });
     
      var infowindow = new daum.maps.InfoWindow({
              content: '<div style="text-align:center;padding:10px;width:100%; ">'+content+'</div>' // 인포윈도우에 표시할 내용
          });
         
     // 마커 객체에 마커아이디와 마커의 기본 이미지를 추가합니다
     marker.normalImage = normalImage;
        
     // 마커에 mouseover 이벤트를 등록합니다
     daum.maps.event.addListener(marker, 'mouseover', function() {
         // 클릭된 마커가 없고, mouseover된 마커가 클릭된 마커가 아니면
         // 마커의 이미지를 오버 이미지로 변경합니다
         if (!selectedMarker || selectedMarker !== marker) {
             marker.setImage(overImage);
             infowindow.open(map,marker);
            
         }
     });
     // 마커에 mouseout 이벤트를 등록합니다
     daum.maps.event.addListener(marker, 'mouseout', function() {

         // 클릭된 마커가 없고, mouseout된 마커가 클릭된 마커가 아니면
         // 마커의 이미지를 기본 이미지로 변경합니다
         if (!selectedMarker || selectedMarker !== marker) {
             marker.setImage(normalImage);
             infowindow.close();
         }
         infowindow.close();
     });
     // 마커에 click 이벤트를 등록합니다
     daum.maps.event.addListener(marker, 'click', function() {

         // 클릭된 마커가 없고, click 마커가 클릭된 마커가 아니면
         // 마커의 이미지를 클릭 이미지로 변경합니다
         if (!selectedMarker || selectedMarker !== marker) {

             // 클릭된 마커 객체가 null이 아니면
             // 클릭된 마커의 이미지를 기본 이미지로 변경하고
             !!selectedMarker && selectedMarker.setImage(selectedMarker.normalImage);
             // 현재 클릭된 마커의 이미지는 클릭 이미지로 변경합니다
             marker.setImage(clickImage);
             infowindow.open(map,marker);
           setTimeout(function(){
               infowindow.close();   
               selectedMarker = null;
               marker.setImage(normalImage);
           },1000*1.2);
          
         }else{
             marker.setImage(normalImage);
           infowindow.close();
         }
         // 클릭된 마커를 현재 클릭된 마커 객체로 설정합니다
         selectedMarker = marker;
    
     });
     
 }

 // MakrerImage 객체를 생성하여 반환하는 함수입니다
 function createMarkerImage(markerSize, offset, spriteOrigin) {
     var markerImage = new daum.maps.MarkerImage(
         SPRITE_MARKER_URL, // 스프라이트 마커 이미지 URL
         markerSize, // 마커의 크기
         {
             offset: offset, // 마커 이미지에서의 기준 좌표
             spriteOrigin: spriteOrigin, // 스트라이프 이미지 중 사용할 영역의 좌상단 좌표
             spriteSize: spriteImageSize // 스프라이트 이미지의 크기
         }
     );
    
     return markerImage;
 }

 //accordion

 var acc = document.getElementsByClassName("accordion");
 var i;

 for (i = 0; i < acc.length; i++) {
     acc[i].onclick = function(){
         /* Toggle between adding and removing the "active" class,
         to highlight the button that controls the panel */
         this.classList.toggle("active");

         /* Toggle between hiding and showing the active panel */
         var panel = this.nextElementSibling;
         if (panel.style.display === "block") {
             panel.style.display = "none";
         } else {
             panel.style.display = "block";
         }
     }
 }

//acc-background-color 설정했담
 for (var i = 0, len = positions.length; i < len; i++) {
     $("#acc-panel"+(i+1)+"-btn").css("background-color","#fff");
     $("#acc-panel"+(i+1)+"-btn").css("border-bottom","1.3px solid "+positions[i].color);
     $("#acc-panel"+(i+1)+"-btn").css("color",positions[i].color);
     $("#acc-panel"+(i+1)+"-btn").css("font-weight","bold");
 }
 
 
 
